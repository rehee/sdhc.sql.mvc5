@using SDHC.Common.Entity.Models
@using SDHC.Common.Entity.Types
@model ContentPropertyIndex
@Html.Hidden("Properties[" + Model.Index.ToString() + "].Key", Model.Property.Key)
@Html.Hidden("Properties[" + Model.Index.ToString() + "].ValueType", Model.Property.ValueType)
@Html.Hidden("Properties[" + Model.Index.ToString() + "].EditorType", Model.Property.EditorType)
@Html.Hidden("Properties[" + Model.Index.ToString() + "].MultiSelect", Model.Property.MultiSelect)
@{
    var valueName = "Value";
    if (Model.Property.MultiSelect)
    {

        valueName = "MultiValue";

    }
    var inputName = "Properties[" + @Model.Index.ToString() + "]." + @valueName;
    var FileName = "Properties[" + @Model.Index.ToString() + "].File";
}


<div class="form-group">
    <label>@Model.Property.Title</label>
    @if (Model.Property.EditorType == EnumInputType.Text)
    {
        <input type="text" class="form-control" name="@inputName" value="@Model.Property.Value" />
    }
    @if (Model.Property.EditorType == EnumInputType.Password)
    {
        <input type="password" class="form-control" name="@inputName" value="@Model.Property.Value" />
    }
    @if (Model.Property.EditorType == EnumInputType.TextArea)
    {
        <textarea class="form-control" rows="5" name="@inputName">@Model.Property.Value</textarea>
    }
    @if (Model.Property.EditorType == EnumInputType.DateTime)
    {
        <div class='input-group date datetimepicker' id="mydatepicker">
            <input type='text' class="form-control" name="@inputName" value="@Model.Property.Value.Split(' ').FirstOrDefault()" placeholder="yyyy-mm-dd" />
            <span class="input-group-addon">
                <span class="glyphicon glyphicon-calendar"></span>
            </span>
        </div>
    }
    @if (Model.Property.EditorType == EnumInputType.DropDwon)
    {
        <select name="@inputName" class="form-control" @(Model.Property.MultiSelect ? "multiple" : "")>
            @foreach (var item in Model.Property.SelectItems)
            {
                if (item.Select)
                {
                    <option selected value="@(item.Value)">@(item.Name)</option>
                }
                else
                {
                    <option value="@(item.Value)">@(item.Name)</option>
                }

            }
        </select>
    }
    @if (Model.Property.EditorType == EnumInputType.FileUpload)
    {
        <input type="file" name="@FileName" />
        <input type="hidden" name="@inputName" value="@Model.Property.Value" />
    }
</div>
